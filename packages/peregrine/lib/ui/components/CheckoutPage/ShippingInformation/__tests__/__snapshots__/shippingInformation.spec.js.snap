// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders card state with customer data 1`] = `
<div
  className="root"
>
  <div
    className="cardHeader"
  >
    <h5
      className="cardTitle"
    >
      <mock-FormattedMessage
        defaultMessage="Shipping Information"
        id="shippingInformation.cardTitle"
      />
    </h5>
    <button
      className="editButton"
      disabled={false}
      onClick={[MockFunction handleEditShipping]}
      onDragStart={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      type="button"
    >
      <span
        className="content"
      >
        <span
          className="root"
        >
          <svg
            className="icon"
            fill="none"
            height={16}
            stroke="currentColor"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
            viewBox="0 0 24 24"
            width={16}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"
            />
          </svg>
        </span>
        <span
          className="editText"
        >
          <mock-FormattedMessage
            defaultMessage="Edit"
            id="global.editButton"
          />
        </span>
      </span>
    </button>
  </div>
  <Card
    shippingData="Shipping Data"
  />
</div>
`;

exports[`renders card state with guest data 1`] = `
<div
  className="root"
>
  <div
    className="cardHeader"
  >
    <h5
      className="cardTitle"
    >
      <mock-FormattedMessage
        defaultMessage="Shipping Information"
        id="shippingInformation.cardTitle"
      />
    </h5>
    <button
      className="editButton"
      disabled={false}
      onClick={[MockFunction handleEditShipping]}
      onDragStart={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      type="button"
    >
      <span
        className="content"
      >
        <span
          className="root"
        >
          <svg
            className="icon"
            fill="none"
            height={16}
            stroke="currentColor"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
            viewBox="0 0 24 24"
            width={16}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"
            />
          </svg>
        </span>
        <span
          className="editText"
        >
          <mock-FormattedMessage
            defaultMessage="Edit"
            id="global.editButton"
          />
        </span>
      </span>
    </button>
  </div>
  <Card
    shippingData="Shipping Data"
  />
  <require('./editModal')
    shippingData="Shipping Data"
  />
</div>
`;

exports[`renders form state without data 1`] = `
<div
  className="root_editMode"
>
  <h3
    className="editTitle"
  >
    <mock-FormattedMessage
      defaultMessage="1. Shipping Information"
      id="shippingInformation.editTitle"
    />
  </h3>
  <div
    className="editWrapper"
  >
    <AddressForm
      shippingData="Shipping Data"
    />
  </div>
</div>
`;

exports[`renders loading element 1`] = `
<LoadingIndicator
  classes={
    Object {
      "root": "loading",
    }
  }
>
  <mock-FormattedMessage
    defaultMessage="Fetching Shipping Information..."
    id="shippingInformation.loading"
  />
</LoadingIndicator>
`;
