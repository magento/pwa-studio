// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should return correct shape 1`] = `
<div
  className="root"
>
  <div
    className="credit_card_root"
  >
    <FormError
      allowErrorMessages={true}
      classes={
        Object {
          "root": "formErrorContainer",
        }
      }
      errors={Array []}
    />
    <div
      className="dropin_root"
    >
      <mock-BraintreeDropin
        onError={[MockFunction]}
        onReady={[MockFunction]}
        onSuccess={[MockFunction]}
      />
    </div>
    <div
      className="address_check"
    >
      <mock-Checkbox
        field="isBillingAddressSame"
        initialValue={false}
        label="Billing address same as shipping address"
      />
    </div>
    <div
      className="billing_address_fields_root"
    >
      <mock-Field
        classes={
          Object {
            "root": "first_name",
          }
        }
        id="firstName"
        label="First Name"
      >
        <mock-TextInput
          field="firstName"
          id="firstName"
          initialValue="sample first name"
          validate={[Function]}
        />
      </mock-Field>
      <mock-Field
        classes={
          Object {
            "root": "last_name",
          }
        }
        id="lastName"
        label="Last Name"
      >
        <mock-TextInput
          field="lastName"
          id="lastName"
          initialValue="sample last name"
          validate={[Function]}
        />
      </mock-Field>
      <mock-Country
        classes={
          Object {
            "root": "country",
          }
        }
        initialValue="sample country"
        validate={[Function]}
      />
      <mock-Field
        classes={
          Object {
            "root": "street1",
          }
        }
        id="street1"
        label="Street Address"
      >
        <mock-TextInput
          field="street1"
          id="street1"
          initialValue="sample street 1"
          validate={[Function]}
        />
      </mock-Field>
      <mock-Field
        classes={
          Object {
            "root": "street2",
          }
        }
        id="street2"
        label="Street Address 2"
        optional={true}
      >
        <mock-TextInput
          field="street2"
          id="street2"
          initialValue="sample street 2"
        />
      </mock-Field>
      <mock-Field
        classes={
          Object {
            "root": "city",
          }
        }
        id="city"
        label="City"
      >
        <mock-TextInput
          field="city"
          id="city"
          initialValue="sample city"
          validate={[Function]}
        />
      </mock-Field>
      <mock-Region
        classes={
          Object {
            "root": "region",
          }
        }
        fieldInput="region[label]"
        fieldSelect="region[region_id]"
        initialValue="sample region"
        optionValueKey="id"
        validate={[Function]}
      />
      <mock-Postcode
        classes={
          Object {
            "root": "postal_code",
          }
        }
        initialValue="sample postal code"
        validate={[Function]}
      />
      <mock-Field
        classes={
          Object {
            "root": "phone_number",
          }
        }
        id="phoneNumber"
        label="Phone Number"
      >
        <mock-TextInput
          field="phoneNumber"
          id="phoneNumber"
          initialValue="sample phone number"
          validate={[Function]}
        />
      </mock-Field>
    </div>
  </div>
</div>
`;
