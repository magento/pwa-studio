// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`displays an error message if there is a sign in error 1`] = `
<div
  className="root"
>
  <span
    className="title"
  >
    <mock-FormattedMessage
      defaultMessage="Sign-in to Your Account"
      id="signIn.titleText"
    />
  </span>
  <FormError
    errors={
      Array [
        null,
        Object {
          "graphQLErrors": Array [
            Object {
              "message": "The account sign-in was incorrect or your account is disabled temporarily. Please wait and try again later.",
            },
          ],
        },
      ]
    }
  />
  <form
    className="form"
    onKeyDown={[Function]}
    onReset={[Function]}
    onSubmit={[Function]}
  >
    <div
      className="root"
    >
      <label
        className="label"
      >
        Email address
      </label>
      <span
        className="root"
        style={
          Object {
            "--iconsAfter": 0,
            "--iconsBefore": 0,
          }
        }
      >
        <span
          className="input"
        >
          <input
            autoComplete="email"
            className="input"
            id="email"
            name="email"
            onBlur={[Function]}
            onChange={[Function]}
            value=""
          />
        </span>
        <span
          className="before"
        />
        <span
          className="after"
        />
      </span>
      <p
        className="root"
      />
    </div>
    <div
      className="root"
    >
      <label
        className="label"
      >
        Password
      </label>
      <span
        className="root"
        style={
          Object {
            "--iconsAfter": 1,
            "--iconsBefore": 0,
          }
        }
      >
        <span
          className="input"
        >
          <input
            autoComplete="current-password"
            className="input"
            id="password"
            name="password"
            onBlur={[Function]}
            onChange={[Function]}
            type="password"
            value=""
          />
        </span>
        <span
          className="before"
        />
        <span
          className="after"
        >
          <i />
        </span>
      </span>
      <p
        className="root"
      />
    </div>
    <div
      className="forgotPasswordButtonContainer"
    >
      <i />
    </div>
    <div
      className="buttonsContainer"
    >
      <i />
      <i />
    </div>
  </form>
</div>
`;

exports[`renders correctly 1`] = `
<div
  className="root"
>
  <span
    className="title"
  >
    <mock-FormattedMessage
      defaultMessage="Sign-in to Your Account"
      id="signIn.titleText"
    />
  </span>
  <FormError
    errors={
      Array [
        null,
        null,
      ]
    }
  />
  <form
    className="form"
    onKeyDown={[Function]}
    onReset={[Function]}
    onSubmit={[Function]}
  >
    <div
      className="root"
    >
      <label
        className="label"
      >
        Email address
      </label>
      <span
        className="root"
        style={
          Object {
            "--iconsAfter": 0,
            "--iconsBefore": 0,
          }
        }
      >
        <span
          className="input"
        >
          <input
            autoComplete="email"
            className="input"
            id="email"
            name="email"
            onBlur={[Function]}
            onChange={[Function]}
            value=""
          />
        </span>
        <span
          className="before"
        />
        <span
          className="after"
        />
      </span>
      <p
        className="root"
      />
    </div>
    <div
      className="root"
    >
      <label
        className="label"
      >
        Password
      </label>
      <span
        className="root"
        style={
          Object {
            "--iconsAfter": 1,
            "--iconsBefore": 0,
          }
        }
      >
        <span
          className="input"
        >
          <input
            autoComplete="current-password"
            className="input"
            id="password"
            name="password"
            onBlur={[Function]}
            onChange={[Function]}
            type="password"
            value=""
          />
        </span>
        <span
          className="before"
        />
        <span
          className="after"
        >
          <i />
        </span>
      </span>
      <p
        className="root"
      />
    </div>
    <div
      className="forgotPasswordButtonContainer"
    >
      <i />
    </div>
    <div
      className="buttonsContainer"
    >
      <i />
      <i />
    </div>
  </form>
</div>
`;
